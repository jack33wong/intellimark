
> intellimark-chat-backend@1.0.0 dev
> cross-env NODE_OPTIONS=--no-deprecation nodemon --exec tsx --tsconfig tsconfig.dev.json server.ts

[33m[nodemon] 3.1.10[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): *.*[39m
[33m[nodemon] watching extensions: json,json[39m
[32m[nodemon] starting `tsx --tsconfig tsconfig.dev.json server.ts`[39m
🔍 [API CALL] /api/mark-homework/process-single - Debug Mode: OFF
🔍 Authentication Debug:
🔍 userId: n2zbkouZ5mbHiAiQeNErxxPXgZv2
🔍 userEmail: test@intellimark.com
🔍 isAuthenticated: true
🔍 req.user: {
  uid: 'n2zbkouZ5mbHiAiQeNErxxPXgZv2',
  email: 'test@intellimark.com',
  emailVerified: false,
  name: 'tester',
  picture: undefined,
  role: 'user'
}
🔄 [STEP 1] Classification - gemini-2.0-flash-lite
🔄 [STEP 2] Question Detection - gemini-2.0-flash-lite
🔄 [STEP 3] OCR Processing - gemini-2.0-flash-lite
✅ [GOOGLE VISION] Pass A completed
✅ [GOOGLE VISION] Pass B completed
✅ [GOOGLE VISION] Pass C completed
✅ [OCR PROCESSING] Google Vision completed - 0 text blocks detected
✅ [OCR PROCESSING] Math Detection completed - 0 math blocks found
✅ [OCR PROCESSING] Hybrid OCR completed - 0 text blocks, 0 math blocks, 399ms
🔄 [STEP 4] Marking Instructions - gemini-2.0-flash-lite
🔄 [STEP 5] Burn Overlay - gemini-2.0-flash-lite
🔄 [STEP 6] AI Response Generation - gemini-2.0-flash-lite
🔄 [STEP 7] Data Processing Complete - gemini-2.0-flash-lite
🔍 MarkHomeworkWithAnswer: Final progressData (marking mode): {
  currentStepDescription: '',
  completedSteps: [
    'classification',
    'question_detection',
    'ocr_processing',
    'marking_instructions',
    'burn_overlay',
    'ai_response',
    'data_complete'
  ],
  allSteps: [
    {
      id: 'classification',
      name: 'Classification',
      description: 'Analyzing image...',
      percentage: 14
    },
    {
      id: 'question_detection',
      name: 'Question Detection',
      description: 'Detecting question type...',
      percentage: 28
    },
    {
      id: 'ocr_processing',
      name: 'OCR Processing',
      description: 'Extracting text and math...',
      percentage: 57
    },
    {
      id: 'marking_instructions',
      name: 'Marking Instructions',
      description: 'Generating feedback...',
      percentage: 71
    },
    {
      id: 'burn_overlay',
      name: 'Burn Overlay',
      description: 'Creating annotations...',
      percentage: 85
    },
    {
      id: 'ai_response',
      name: 'AI Response',
      description: 'Finalizing response...',
      percentage: 95
    },
    {
      id: 'data_complete',
      name: 'Data Complete',
      description: 'Almost done...',
      percentage: 100
    }
  ],
  isComplete: true
}
🔍 MarkHomeworkWithAnswer: Marking mode return
🔍 Database Persistence Check:
🔍 isAuthenticated: true
🔍 Will persist to database: true
🔍 Starting database persistence...
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
