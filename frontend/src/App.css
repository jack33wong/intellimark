/* CSS Variables are defined in index.css - no need to override here */

/* Import component styles */
@import './components/common/Button.css';
@import './components/common/Modal.css';
@import './components/common/LoadingSpinner.css';

/* App Layout Styles */
.app-container {
  min-height: 100vh; /* Allow growth beyond viewport */
  width: 100vw;
  background-color: var(--background-white-main);
  color: var(--text-primary);
  display: flex;
  overflow: visible; /* Allow content to overflow */
}

.app-body {
  flex: 1;
  display: flex;
  overflow: hidden;
}

.right-side {
  flex: 1;
  display: flex;
  flex-direction: column;
  overflow: hidden; /* Let chat-content handle scrolling */
  height: 100vh; /* Fixed height to contain scroll */
}

.mark-homework-right-side {
  flex: 1;
  display: flex;
  flex-direction: column;
  overflow-y: auto;
}

.mark-homework-main-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  overflow: hidden; /* Let child components handle their own scrolling */
  height: 0; /* This forces the flex item to respect the flex: 1 constraint */
}

/* When header is hidden in chat mode, main content takes full height */
.right-side.chat-mode .mark-homework-main-content {
  height: 100vh;
}

.main-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  background-color: var(--background-gray-main);
  /* Remove height constraint - let content grow naturally */
  width: 100%;
  margin-left: 0; /* No margin needed with flexbox layout */
  padding-top: 0; /* No padding needed, header will be inside content area */
  min-width: 0; /* Allow flex item to shrink below content size */
  overflow: visible; /* Allow content to overflow */
}

/* When chat header is present, add extra padding */
.main-content.has-chat-header {
  padding-top: 0; /* No padding needed with new layout */
}

.app {
  display: flex;
  min-height: 100vh;
  background-color: var(--background-white-main);
  color: var(--text-primary);
}

.welcome-message {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 2rem;
  text-align: center;
  min-height: 0;
}

.welcome-message h1 {
  font-size: 2.5rem;
  margin-bottom: 1rem;
  color: var(--text-brand);
}

.welcome-message p {
  font-size: 1.2rem;
  color: var(--text-secondary);
  margin-bottom: 2rem;
}


/* Additional App-specific styles */
.app {
  position: relative;
}

/* Loading overlay */
.loading-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.8);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  backdrop-filter: blur(4px);
}

/* Loading spinner styles are defined in LoadingSpinner.css */

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Empty state */
.empty-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  text-align: center;
  color: var(--text-tertiary);
  padding: 40px;
}

.empty-state h3 {
  font-size: 24px;
  font-weight: 600;
  margin-bottom: 12px;
  color: var(--text-primary);
}

.empty-state p {
  font-size: 16px;
  line-height: 1.6;
  max-width: 400px;
  color: var(--text-secondary);
}

.empty-state-icon {
  width: 64px;
  height: 64px;
  margin-bottom: 24px;
  opacity: 0.5;
  color: var(--text-brand);
}

/* Error state */
.error-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  text-align: center;
  color: var(--function-error);
  padding: 40px;
}

.error-state h3 {
  font-size: 24px;
  font-weight: 600;
  margin-bottom: 12px;
  color: var(--function-error);
}

.error-state p {
  font-size: 16px;
  line-height: 1.6;
  max-width: 400px;
  color: var(--text-secondary);
  margin-bottom: 20px;
}

.error-state .btn {
  background: var(--function-error);
  color: white;
  padding: 12px 24px;
  border: none;
  border-radius: 8px;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.error-state .btn:hover {
  background: #ef4444;
  transform: translateY(-1px);
}

/* Success state */
.success-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  text-align: center;
  color: var(--success-color);
  padding: 40px;
}

.success-state h3 {
  font-size: 24px;
  font-weight: 600;
  margin-bottom: 12px;
  color: var(--success-color);
}

.success-state p {
  font-size: 16px;
  line-height: 1.6;
  max-width: 400px;
  color: var(--text-secondary);
}

/* Form group styles are defined in ProfilePage.css */

.form-label {
  display: block;
  margin-bottom: 8px;
  font-weight: 500;
  color: var(--text-primary);
  font-size: 14px;
}

.form-input {
  width: 100%;
  padding: 12px 16px;
  border: 1px solid var(--border-main);
  border-radius: 8px;
  background: var(--background-menu-gray);
  color: var(--text-primary);
  font-size: 14px;
  transition: all 0.2s ease;
}

.form-input:focus {
  outline: none;
  border-color: var(--text-brand);
  box-shadow: 0 0 0 3px var(--focus-ring);
}

.form-input::placeholder {
  color: var(--text-tertiary);
}

.form-textarea {
  resize: vertical;
  min-height: 100px;
}

.form-select {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 12px center;
  background-repeat: no-repeat;
  background-size: 16px;
  padding-right: 40px;
}

/* Button group styles are defined in Button.css */

/* Modal styles */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.8);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  backdrop-filter: blur(4px);
}

.modal {
  background: var(--background-menu-white);
  border: 1px solid var(--border-main);
  border-radius: 12px;
  padding: 24px;
  max-width: 500px;
  width: 90%;
  max-height: 90vh;
  overflow-y: auto;
  box-shadow: var(--shadow-lg);
  animation: modalSlideIn 0.3s ease-out;
}

@keyframes modalSlideIn {
  from {
    opacity: 0;
    transform: translateY(-20px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

.modal-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
  padding-bottom: 16px;
  border-bottom: 1px solid var(--border-main);
}

.modal-title {
  font-size: 20px;
  font-weight: 600;
  color: var(--text-primary);
}

.modal-close {
  background: none;
  border: none;
  color: var(--text-tertiary);
  cursor: pointer;
  padding: 8px;
  border-radius: 6px;
  transition: all 0.2s ease;
}

.modal-close:hover {
  background: var(--background-menu-gray);
  color: var(--text-primary);
}

.modal-body {
  margin-bottom: 20px;
}

.modal-footer {
  display: flex;
  justify-content: flex-end;
  gap: 12px;
  padding-top: 16px;
  border-top: 1px solid var(--border-main);
}

/* Tooltip */
.tooltip {
  position: relative;
  display: inline-block;
}

.tooltip .tooltip-text {
  visibility: hidden;
  width: 200px;
  background-color: var(--background-menu-gray);
  color: var(--text-primary);
  text-align: center;
  border-radius: 6px;
  padding: 8px 12px;
  position: absolute;
  z-index: 1;
  bottom: 125%;
  left: 50%;
  margin-left: -100px;
  opacity: 0;
  transition: opacity 0.3s;
  border: 1px solid var(--border-main);
  box-shadow: var(--shadow-md);
  font-size: 12px;
}

.tooltip:hover .tooltip-text {
  visibility: visible;
  opacity: 1;
}

/* Badge */
.badge {
  display: inline-flex;
  align-items: center;
  padding: 4px 8px;
  border-radius: 12px;
  font-size: 12px;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.badge-primary {
  background: var(--text-brand);
  color: white;
}

.badge-secondary {
  background: var(--background-menu-gray);
  color: var(--text-secondary);
  border: 1px solid var(--border-main);
}

.badge-success {
  background: var(--success-color);
  color: white;
}

.badge-warning {
  background: var(--warning-color);
  color: white;
}

.badge-error {
  background: var(--function-error);
  color: white;
}

/* Divider */
.divider {
  height: 1px;
  background: var(--border-main);
  margin: 20px 0;
}

/* Scrollbar styling */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: var(--background-menu-gray);
}

::-webkit-scrollbar-thumb {
  background: var(--border-main);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: var(--border-light);
}

/* Responsive utilities */
@media (max-width: 768px) {
  .modal {
    margin: 20px;
    width: calc(100% - 40px);
  }
  
  .btn-group {
    flex-direction: column;
  }
}

@media (max-width: 480px) {
  .modal {
    margin: 10px;
    width: calc(100% - 20px);
    padding: 16px;
  }
  
  .modal-header {
    flex-direction: column;
    align-items: flex-start;
    gap: 12px;
  }
}

/* Sidebar login prompt styles */
.mark-history-login-prompt {
  padding: 1rem;
}

.mark-history-login-prompt .placeholder-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;
  padding: 1rem;
  text-align: center;
  color: var(--text-secondary);
}

.login-prompt-btn {
  background: var(--text-brand);
  color: white;
  border: none;
  padding: 0.5rem 1rem;
  border-radius: 6px;
  cursor: pointer;
  font-size: 0.9rem;
  font-weight: 500;
  transition: all 0.2s ease;
  margin-top: 0.5rem;
}

.login-prompt-btn:hover {
  background: var(--text-brand);
  transform: translateY(-1px);
}

.login-prompt-btn:active {
  transform: translateY(0);
}
